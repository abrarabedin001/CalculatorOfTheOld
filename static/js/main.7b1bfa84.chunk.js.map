{"version":3,"sources":["components/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["Calculator","props","buttonClicked","e","state","outputValue","length","test","setState","formulaValue","target","value","setTimeout","Acclicked","opClicked","equalClicked","console","log","parseFloat","arr1","split","arr2","j","numFinal","patt1","patt2","patt3","patt4","r","push","filter","elem","indexOf","index","number","splice","String","className","this","id","onClick","bind","Component","App","style","margin","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7b1bfa84.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport '../App.css'\r\nexport default class Calculator extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            formulaValue: '',\r\n            outputValue: '0'\r\n        }\r\n        \r\n    }\r\n    buttonClicked = (e) => {\r\n        \r\n        \r\n        \r\n        var patt1 = /[+]/g; \r\n        var patt2 = /[-]/g; \r\n        var patt3 = /[*]/g; \r\n        var patt4 = /[/]/g; \r\n        //console.log(\"Is this true? \" + (this.state.outputValue==\"0\"))\r\n        \r\n        if(this.state.outputValue.length < 22 && this.state.outputValue != \"Digit limit Met\" ){\r\n            \r\n            \r\n            if(patt1.test(this.state.outputValue)||patt2.test(this.state.outputValue)||patt3.test(this.state.outputValue)||patt4.test(this.state.outputValue)||this.state.outputValue==\"0\"){\r\n                \r\n                if(this.state.outputValue.length < 22){\r\n                this.setState({formulaValue: this.state.formulaValue + e.target.value, outputValue: e.target.value})\r\n                }\r\n            }else{\r\n                \r\n                if(this.state.outputValue.length < 22){\r\n                    this.setState({formulaValue: this.state.formulaValue + e.target.value, outputValue: this.state.outputValue + e.target.value})\r\n                }\r\n        } \r\n        }else{\r\n            if(this.state.outputValue != \"Digit limit Met\"){\r\n                let num = this.state.outputValue \r\n            } \r\n             this.setState({...this.state,outputValue:\"Digit limit Met\"})\r\n             setTimeout(()=>{\r\n                 this.setState({...this.state,outputValue: this.state.formulaValue})\r\n             },300)\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    Acclicked = (e) => {\r\n       \r\n        \r\n        this.setState({formulaValue: '', outputValue: '0'})\r\n\r\n    }\r\n    opClicked = (e) => {\r\n        \r\n        \r\n        let equal = /=/g\r\n        if(equal.test(this.state.formulaValue)){\r\n            this.setState({formulaValue: this.state.outputValue + e.target.value, outputValue: e.target.value})\r\n        }else{\r\n            this.setState({formulaValue: this.state.formulaValue+e.target.value, outputValue: e.target.value})\r\n        }\r\n    }\r\n    equalClicked =(e)=>{\r\n        console.log(e.target.value) \r\n        let num = parseFloat(this.state.formulaValue)\r\n        let arr1 = this.state.formulaValue.split(\"\")\r\n        let arr2 = []\r\n        let j = 0\r\n        let numFinal = \"\"\r\n        var patt1 = /[+]/g; \r\n        var patt2 = /[-]/g; \r\n        var patt3 = /[*]/g; \r\n        var patt4 = /[/]/g; \r\n        for(let r in arr1){\r\n            if(r==0){\r\n                arr2.push(arr1[r])        \r\n            }else{\r\n                // ///// fix it here ///// fix it here\r\n                if(patt1.test(arr1[r])||patt2.test(arr1[r])||patt3.test(arr1[r])||patt4.test(arr1[r])){      ///// fix it here\r\n                        j++\r\n                        arr2[j] = arr1[r]\r\n                        j++\r\n                    \r\n                    console.log(\"div n mult\")\r\n                    console.log(arr2)\r\n                }else{\r\n                    console.log(\"j\"+arr2[j])\r\n                    if(arr2[j]){\r\n                        numFinal = arr2[j]+arr1[r]\r\n                    }else{\r\n                        numFinal = arr1[r]\r\n                    }\r\n                    \r\n                    arr2[j] = numFinal\r\n                    numFinal =\"\"\r\n                }\r\n            }\r\n        }\r\n        console.log(\"this is arr2: \" + arr2)\r\n        arr2 = arr2.filter(elem=>elem!==\"\")\r\n        console.log(\"this is arr2: \" + arr2)\r\n            while(arr2.indexOf(\"/\")!=-1){\r\n                let index = arr2.indexOf(\"/\")\r\n                if(arr2[index+1]==\"-\"||arr2[index+1]==\"+\"){\r\n                    let number = arr2[index+1]+arr2[index+2]\r\n                    arr2[index+1] = number\r\n                    arr2.splice(index+2,1)\r\n                    console.log(arr2)\r\n                }else{\r\n                    let number = parseFloat(arr2[index-1])/parseFloat(arr2[index+1]) \r\n                    arr2[index-1] = String(number)\r\n                    arr2.splice(index,2)\r\n                    console.log(arr2)\r\n                }\r\n                \r\n            }\r\n            console.log(\"division\")\r\n            while(arr2.indexOf(\"*\")!=-1){\r\n                let index = arr2.indexOf(\"*\")\r\n                if(arr2[index+1]==\"-\"||arr2[index+1]==\"+\"){\r\n                    let number = arr2[index+1]+arr2[index+2]\r\n                    arr2[index+1] = number\r\n                    arr2.splice(index+2,1)\r\n                    console.log(arr2)\r\n                }else{\r\n                    let number = parseFloat(arr2[index-1])*parseFloat(arr2[index+1]) \r\n                    arr2[index-1] = String(number)\r\n                    arr2.splice(index,2)\r\n                    console.log(arr2)\r\n                }\r\n                \r\n            }\r\n            console.log(\"multiplication\")\r\n            // let add = /+./\r\n            // console.log(arr2.indexOf(add))\r\n            while(arr2.indexOf(\"+\")!=-1){\r\n                let index = arr2.indexOf(\"+\")\r\n                let number = parseFloat(arr2[index-1])+parseFloat(arr2[index+1]) \r\n                arr2[index-1] = number\r\n                arr2.splice(index,2)\r\n                console.log(arr2)\r\n                \r\n            }\r\n            console.log(\"addition\")\r\n            while(arr2.indexOf(\"-\")!=-1){\r\n                let index = arr2.indexOf(\"-\")\r\n                let number = parseFloat(arr2[index-1])-parseFloat(arr2[index+1]) \r\n                arr2[index-1] = number\r\n                arr2.splice(index,2)\r\n                console.log(arr2)\r\n                \r\n            }\r\n            \r\n            console.log(\"subtraction\")\r\n\r\n        let equal = /=/g\r\n        if(equal.test(this.state.formulaValue)){\r\n            this.setState({formulaValue: arr2[0], outputValue:arr2[0]})\r\n        }else{\r\n            this.setState({formulaValue: this.state.formulaValue +\"=\"+ arr2[0], outputValue:arr2[0]})\r\n        }\r\n        \r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className='formulaScreen'>{this.state.formulaValue}\r\n                </div>\r\n                <div id='calculator'>\r\n\r\n                    <div className='outputScreen'>\r\n                        {this.state.outputValue}\r\n                    </div>\r\n                    <button className='AC' value={\"AC\"} onClick = {this.Acclicked.bind(this)} >AC</button>\r\n                    <button className='slash' onClick = {this.opClicked.bind(this)} value={\"/\"}>/</button>\r\n                    <button className='x'  value=\"*\" onClick = {this.opClicked.bind(this)}>x</button>\r\n                    <button className='seven' onClick={this.buttonClicked.bind(this)}  value={7}>7</button>\r\n                    <button className='eight' onClick={this.buttonClicked.bind(this)}  value={8}>8</button>\r\n                    <button className='nine' onClick={this.buttonClicked.bind(this)} value={9}>9</button>\r\n                    <button className='minus' onClick = {this.opClicked.bind(this)}  value={\"-\"}>-</button>\r\n                    <button className='four'  onClick={this.buttonClicked.bind(this)} value={4}>4</button>\r\n                    <button className='five' onClick={this.buttonClicked.bind(this)}  value={5}>5</button>\r\n                    <button className='six' onClick={this.buttonClicked.bind(this)} value={6}>6</button>\r\n                    <button className='plus'  value={\"+\"} onClick = {this.opClicked.bind(this)} >+</button>\r\n                    <button className='one' onClick={this.buttonClicked.bind(this)}  value={1}>1</button>\r\n                    <button className='two' onClick={this.buttonClicked.bind(this)} value={2}>2</button>\r\n                    <button className='three' onClick={this.buttonClicked.bind(this)} value={3}>3</button>\r\n                    <button className='equal' value={\"=\"} onClick = {this.equalClicked.bind(this)} >=</button>\r\n                    <button className='zero' onClick={this.buttonClicked.bind(this)} value={0}>0</button>\r\n                    <button className='point' onClick={this.buttonClicked.bind(this)}  value={\".\"}>.</button>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport Calculator from './components/Calculator'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <p style={{margin:\"0px\"}}>by--Abrar</p>\n     <Calculator />\n     \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}